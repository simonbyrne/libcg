name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5'
          - '^1.6.0-0'
          # - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
          # - x86
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/julia-buildpkg@latest          
      - name: Print workspace path
        run: echo $GITHUB_WORKSPACE && pwd && echo ${{github.ref}}
      - name: make
        run: make
        if: matrix.os != 'windows-latest'
      - name: make (win)
        run: make JULIA_DIR=C:\julia CC=gcc
        if: matrix.os == 'windows-latest'
      # - name: run
      #   run: ./main --trace-compile=stderr
      #   if: matrix.os != 'windows-latest'
      - name: run (ubuntu)
        run: |
          ls "$GITHUB_WORKSPACE/target/lib"
          ldd ./main
          ./main --trace-compile=stderr
        if: matrix.os == 'ubuntu-latest'
      - name: run (macOS)
        run: |
          ls "$GITHUB_WORKSPACE/target/lib"
          otool -L ./main
          ./main --trace-compile=stderr
        if: matrix.os == 'macOS-latest'
      - name: run (win)
        run: |
          echo "$Env:GITHUB_WORKSPACE/target/lib" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
          echo "$Env:GITHUB_WORKSPACE/target/lib/julia" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
          echo "GITHUB_PATH=$env:GITHUB_PATH"
          echo "PATH=$env:PATH"
          echo "Path=$env:Path"
          ./main --trace-compile=stderr
        if: matrix.os == 'windows-latest'
      - name: library size
        run: ls -lh target/lib/libcg.*
        shell: bash
